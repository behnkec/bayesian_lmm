---
title: "Bayesian Linear Mixed Modell for the UCAP data set"
format: html
editor: source
---

## Load packages and data set

```{r}
library(brms)
library(readr)
library(bayesplot)
library(ggplot2)
```

```{r}
trials <- read_csv("output_ucap/trials.csv")
head(trials)
```

## Bayesian LMM with brms (no priors)

```{r}
mod_bayes_ri_rs_noprior <- brm(N2 ~ 1 + n_b + (1 + n_b |participant_id),
           data = trials)
```

```{r}
summary(mod_bayes_ri_rs_noprior)
plot(mod_bayes_ri_rs_noprior, variable = c("b_n_bnormal"))
```

```{r}
mod_bayes_ri_rs_noprior$prior
```

## Baysesian LMM with Priors
### Priors

```{r}
prior_1 <- c(prior(normal(0, 10), class = Intercept), # grand mean
             prior(normal(0, 10), class = b, coef = n_bnormal), # grand beta
             prior(normal(0, 50), class = sigma), # within person variation
             prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
             prior(normal(0, 20), class = sd, coef = n_bnormal, group = participant_id)) # between person variation in slope
```

```{r}
prior_2 <- c(prior(normal(0, 50), class = Intercept), # grand mean
             prior(normal(0, 20), class = b, coef = n_bnormal), # grand beta
             prior(normal(0, 100), class = sigma), # within person variation
             prior(normal(0, 40), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
             prior(normal(0, 40), class = sd, coef = n_bnormal, group = participant_id)) # between person variation in slope
```

```{r}
prior_3 <- c(prior(normal(0, 10), class = Intercept), # grand mean
             prior(normal(0, 10), class = b, coef = n_bnormal), # grand beta
             prior(normal(0, 50), class = sigma), # within person variation
             prior(normal(0, 10), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
             prior(normal(0, 10), class = sd, coef = n_bnormal, group = participant_id)) # between person variation in slope
```

```{r}
prior_4 <- c(prior(normal(0, 10), class = Intercept), # grand mean
             prior(normal(0, 5), class = b, coef = n_bnormal), # grand beta
             prior(normal(0, 50), class = sigma), # within person variation
             prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
             prior(normal(0, 20), class = sd, coef = n_bnormal, group = participant_id)) # between person variation in slope
```

```{r}
prior_5 <- c(prior(normal(0, 10), class = Intercept), # grand mean
             prior(normal(0, 5), class = b, coef = n_bnormal), # grand beta
             prior(normal(0, 50), class = sigma), # within person variation
             prior(normal(0, 10), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
             prior(normal(0, 10), class = sd, coef = n_bnormal, group = participant_id)) # between person variation in slope
```


### Model 1

```{r}
mod_bayes_ri_rs_1 <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                       data = trials, 
                       prior = prior_1,
                       family = gaussian()) # default
```
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-essWarning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess

```{r}
summary(mod_bayes_ri_rs_1)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_1, pars = variables(mod_bayes_ri_rs_1)[1:5])
```

```{r}

```



### Model 2

```{r}
mod_bayes_ri_rs_2 <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                         data = trials, 
                         prior = prior_2,
                         family = gaussian()) # default
```

```{r}
summary(mod_bayes_ri_rs_2)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_2, pars = variables(mod_bayes_ri_rs_2)[1:5])
```

### Model 3

```{r}
mod_bayes_ri_rs_3 <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                         data = trials, 
                         prior = prior_3,
                         family = gaussian()) # default
```
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
```{r}
summary(mod_bayes_ri_rs_3)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_3, pars = variables(mod_bayes_ri_rs_3)[1:5])
```

### Model with more iterations

```{r}
mod_bayes_ri_rs_iter <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                            data = trials, 
                            prior = prior_1,
                            family = gaussian(), # default
                            iter = 4000,
                            warmup = 1000) 
save(mod_bayes_ri_rs_iter, file = "mod_bayes_ri_rs_iter.RData")
```

```{r}
summary(mod_bayes_ri_rs_iter)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_iter, pars = variables(mod_bayes_ri_rs_iter)[1:5])
```

### Model with correlation

```{r}
prior_cor <- c(prior(normal(0, 10), class = Intercept), # grand mean
                prior(normal(0, 10), class = b, coef = n_bnormal), # grand beta
                prior(normal(0, 50), class = sigma), # within person variation
                prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
                prior(normal(0, 20), class = sd, coef = n_bnormal, group = participant_id), # between person variation in slope
                prior(lkj(2), class = cor, group = participant_id)) # correlation between random intercept and random slope
```


#### Model

```{r}
mod_bayes_ri_rs_cor <- brm(N2 ~ 1 + n_b + (1 + n_b | participant_id),
                           data = trials, 
                           prior = prior_cor,
                           family = gaussian()) # default
```

```{r}
summary(mod_bayes_ri_rs_cor)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_cor, pars = variables(mod_bayes_ri_rs_cor)[1:6])
```

### Distributional regression model

#### Prior

```{r}
prior_dis <- c(prior(normal(0, 10), class = Intercept), # grand mean
                prior(normal(0, 10), class = b, coef = n_bnormal), # grand beta
                prior(normal(0, log(50)), class = Intercept, dpar = sigma),
                prior(normal(0, 5), class = sd, group = participant_id, dpar = sigma), 
                prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
                prior(normal(0, 20), class = sd, coef = n_bnormal, group = participant_id), # between person variation in slope
                prior(lkj(2), class = cor, group = participant_id)) # correlation between random intercept and random slope
```


#### Model

```{r}
mod_bayes_ri_rs_dis <- brm(brmsformula(N2 ~ 1 + n_b + (1 + n_b | participant_id), sigma ~ 1 + (1 | participant_id)),
                           data = trials, 
                           prior = prior_dis,
                           family = gaussian()) # default
```

```{r}
summary(mod_bayes_ri_rs_dis)
# mcmc_dens gives density plots of posterior distribution
mcmc_dens(mod_bayes_ri_rs_dis, pars = variables(mod_bayes_ri_rs_dis)[1:7])
```

### Prior predictive Checks

Prior 1 (principled?)

```{r}
mod_prior_1 <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                   data = trials, 
                   prior = prior_1,
                   family = gaussian(),
                   sample_prior = "only",
                   ) 
```

```{r}
summary(mod_prior_1)
plot(mod_prior_1)
```
```{r}
pp_check(mod_prior_1, ndraws = 11, type = "hist")
pp_check(mod_prior_1, ndraws = 100, type = "stat", stat = "mean")
pp_check(mod_prior_1, ndraws = 100, type = "stat", stat = "min")
pp_check(mod_prior_1, ndraws = 100, type = "stat", stat = "max")
```


Prior 2 

```{r}
mod_prior_2 <- brm(N2 ~ 1 + n_b + (1 + n_b || participant_id),
                   data = trials, 
                   prior = prior_2,
                   family = gaussian(),
                   sample_prior = "only",
                   ) 
```

```{r}
summary(mod_prior_2)
plot(mod_prior_2)
```


### Posterior predictive check

#### Model 1

```{r}
pp_check(mod_bayes_ri_rs_1, ndraws = 11, type = "hist")
pp_check(mod_bayes_ri_rs_1, ndraws = 100, type = "dens_overlay")
```

```{r}
pp_check(mod_bayes_ri_rs_1,
          type = "dens_overlay_grouped",
          ndraws = 100,
          group = "participant_id")
```
-> sd nicht f√ºr alle Personen gleich

```{r}
pp_check(mod_bayes_ri_rs_1,
         type = "stat_grouped",
         ndraws = 1000,
         group = "participant_id",
         stat = "sd",
         facet_args = list(scales = "fixed"))
```

#### Model 2

```{r}
pp_check(mod_bayes_ri_rs_2, ndraws = 11, type = "hist")
pp_check(mod_bayes_ri_rs_2, ndraws = 100, type = "dens_overlay")
```

```{r}
pp_check(mod_bayes_ri_rs_2,
          type = "dens_overlay_grouped",
          ndraws = 100,
          group = "participant_id")
```

