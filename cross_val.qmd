---
title: "Cross Validation"
format: html
editor: visual
---

## Load packages

```{r}
library(brms)
library(readr)
library(bayesplot)
library(ggplot2)
library(dplyr)
library(rstan)
library(bridgesampling)
```

```{r}
trials_erpcore <- read_csv("output_erpcore/trials.csv")
```

Add column for face vs. car condition
```{r}
trials_cond <- trials_erpcore |>
  mutate(f_c = ifelse(value >= 41, "car", "face"))
```

## Cross validation for Correlation Model

```{r}
prior_0cor <- c(prior(normal(0, 10), class = Intercept), # grand mean
                prior(normal(0, 10), class = b, coef = f_cface), # grand beta
                prior(normal(0, 50), class = sigma), # within person variation
                prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
                prior(normal(0, 20), class = sd, coef = f_cface, group = participant_id), # between person variation in slope
                prior(lkj(2), class = cor, group = participant_id)) # correlation between random intercept and random slope
```


#### Model

```{r}
mod_erpcore_cor_1 <- brm(N170 ~ 1 + f_c + (1 + f_c | participant_id),
                         data = trials_cond, 
                         prior = prior_0cor,
                         family = gaussian(), # default
                         cores = 4) 
```

### Setting up null model

```{r}
mod_erpcore_cor_0 <- brm(N170 ~ 1 + (1 + f_c | participant_id),
                         data = trials_cond, 
                         prior = prior_0cor[prior_0cor$class != "b", ],
                         family = gaussian(), # default
                         cores = 4) 
```

### Computing Leave-one-out Cross Validation

```{r}
(loo_cor_1 <- loo(mod_erpcore_cor_1))
```

```{r}
(loo_cor_0 <- loo(mod_erpcore_cor_0))
```


```{r}
loo_compare(loo_cor_1, loo_cor_0)
```


## Cross validation for Distirbutional Regression

```{r}
prior_0dis <- c(prior(normal(0, 10), class = Intercept), # grand mean
                prior(normal(0, 10), class = b, coef = f_cface), # grand beta
                prior(normal(0, log(50)), class = Intercept, dpar = sigma),
                prior(normal(0, 5), class = sd, group = participant_id, dpar = sigma), 
                prior(normal(0, 20), class = sd, coef = Intercept, group = participant_id), # between person variation in mean 
                prior(normal(0, 20), class = sd, coef = f_cface, group = participant_id), # between person variation in slope
                prior(lkj(2), class = cor, group = participant_id)) # correlation between random intercept and random slope
```


#### Model

```{r}
mod_erpcore_dis_1 <- brm(brmsformula(N170 ~ 1 + f_c + (1 + f_c | participant_id), sigma ~ 1 + (1 | participant_id)),
                         data = trials_cond, 
                         prior = prior_0dis,
                         family = gaussian(), # default
                         cores = 4) 
```

### Setting up null model

```{r}
mod_erpcore_dis_0 <- brm(brmsformula(N170 ~ 1 + (1 + f_c | participant_id), sigma ~ 1 + (1 | participant_id)),
                         data = trials_cond, 
                         prior = prior_0dis[prior_0cor$class != "b", ],
                         family = gaussian(), # default
                         cores = 4) 
```

### Computing Leave-one-out Cross Validation

```{r}
(loo_dis_1 <- loo(mod_erpcore_dis_1))
```

```{r}
(loo_dis_0 <- loo(mod_erpcore_dis_0))
```


```{r}
(loo_compare(loo_dis_1, loo_dis_0))
```


## Comparison of Correlation vs. Distributional Model


```{r}
loo_compare(loo_dis_1, loo_cor_1)
```

