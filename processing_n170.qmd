---
title: "Processing ERP CORE - N170"
format: html
editor: source
---

## Installation

Install reticulate

```{r}
#install.packages("reticulate")
library(reticulate)
```

Check if conda distribution exists (and install if necessary)

```{r}
conda_exe()

#install_miniconda()
```

Install package "hu-neuro-pipeline"

```{r}
py_install("hu-neuro-pipeline", pip = TRUE)
```

## Processing UCAP data

### Loading packages

```{r}
library("reticulate")
library("Rmisc")
library("dplyr")
library("ggplot2")
library("lme4")
```

### Loading the pipeline & downloading ERP Core Data

```{r}
pipeline <- import("pipeline")
n170_files <- pipeline$datasets$get_erpcore("N170")
print(n170_files)
```

### Running the pipeline

```{r}
res <- pipeline$group_pipeline(

  # Input/output paths
  raw_files = n170_files$raw_files,
  log_files = n170_files$log_files,
  output_dir = "output_erpcore",

  # Preprocessing options
  downsample_sfreq = 250.0,
  montage = 'biosemi64',
  ica_method = 'fastica',

  # Epoching options
  triggers = c(1:80),
  skip_log_conditions = list("value" = c(81:202)),
  components = list(
    "name" = list("N170"),
    "tmin" = list(0.11),
    "tmax" = list(0.15),
    "roi" = list("PO8")
  ),
)
```

### Checking results

```{r}
str(res, max.level = 1)
```

```{r}
trials <- res[[1]]
head(trials)
```

```{r}
trials_cond <- trials |>
  mutate(f_c = ifelse(value >= 41, "car", "face"))
trials_cond |>
  ggplot(aes(x = N170, fill = f_c)) +
  geom_density(color = NA, alpha = 0.5) +
  labs(x = "N170 amplitude (ÂµV)", y = "Density", fill = "Condition") +
  theme_minimal(base_size = 25.0) +
  theme(legend.position = "top")
```
